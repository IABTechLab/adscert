syntax = "proto3";

package api;

option go_package = "github.com/IABTechLab/adscert/internal/api";

// RequestInfo conveys the basic parameters required for an authenticated
// connections signing or verify operation.
message RequestInfo {
    string invocation_hostname = 1;
    bytes url_hash = 2;
    bytes body_hash = 3;
}


// SignatureInfo captures the signature generated for the signing request.  It
// also provides structured metadata about the signature operation, useful in
// the integrating application for diagnostics.

message SignatureInfo {
    string signature_message = 1;
    string signing_status = 2;
    string from_domain = 3;
    string from_key = 4;
    string invoking_domain = 5;
    string to_domain = 6;
    string to_key = 7;
}

// AuthenticatedConnectionSigningPackage contains the parameters for a signing
// request.
message AuthenticatedConnectionSigningPackage {
    RequestInfo request_info = 1;
    string timestamp = 2;
    string nonce = 3;
}

// AuthenticatedConnectionSignatureResponse contains the results of a signing
// request, including any signature and relevant metadata. Multiple signatures
// can technically be present according to the specification.
message AuthenticatedConnectionSignatureResponse {
    repeated SignatureInfo signature_info = 1;
}

// AuthenticatedConnectionVerificationPackage contains a request for verifying
// a signature generated by another party.
message AuthenticatedConnectionVerificationPackage {
    RequestInfo request_info = 1;
    string signature_message = 2;
}

// AuthenticatedConnectionVerificationResponse contains the results of verifying
// a signature.
message AuthenticatedConnectionVerificationResponse {
    bool body_valid = 1;
    bool url_valid = 2;
}

service AdsCert2 {
    rpc EmbossSigningPackage(AuthenticatedConnectionSigningPackage) returns (AuthenticatedConnectionSignatureResponse) {}
    rpc VerifySigningPackage(AuthenticatedConnectionVerificationPackage) returns (AuthenticatedConnectionVerificationResponse) {}
}


// TODO: old signer interface below

message AuthenticatedConnectionSignatureParams {
    string destination_url = 1;
    bytes request_body = 2;
}

message AuthenticatedConnectionSignature {
    repeated string signatures = 1;
}

message AuthenticatedConnectionVerificationParams {
    string destination_url = 1;
    bytes request_body = 2;
    repeated string signatures = 3;
}

message AuthenticatedConnectionVerification {
    bool body_valid = 1;
    bool url_valid = 2;
}

service AdsCert {
    rpc SignAuthenticatedConnection(AuthenticatedConnectionSignatureParams) returns (AuthenticatedConnectionSignature) {}
    rpc VerifyAuthenticatedConnection(AuthenticatedConnectionVerificationParams) returns (AuthenticatedConnectionVerification){}
}
